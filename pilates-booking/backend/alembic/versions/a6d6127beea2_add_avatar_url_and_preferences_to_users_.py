"""Add avatar_url and preferences to users, order_index and is_featured to packages

Revision ID: a6d6127beea2
Revises: 225e342b5118
Create Date: 2025-08-19 13:45:15.544661

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'a6d6127beea2'
down_revision = '225e342b5118'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_transactions_id', table_name='transactions')
    op.drop_table('transactions')
    op.drop_index('ix_audit_logs_id', table_name='audit_logs')
    op.drop_table('audit_logs')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('audit_logs',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('action', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('resource_type', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('resource_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('details', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('ip_address', sa.VARCHAR(length=45), autoincrement=False, nullable=True),
    sa.Column('user_agent', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('timestamp', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk_audit_logs_user_id_users'),
    sa.PrimaryKeyConstraint('id', name='pk_audit_logs')
    )
    op.create_index('ix_audit_logs_id', 'audit_logs', ['id'], unique=False)
    op.create_table('transactions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_package_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('booking_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('payment_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('transaction_type', postgresql.ENUM('CREDIT_PURCHASE', 'CREDIT_DEDUCTION', 'CREDIT_REFUND', 'CREDIT_EXPIRY', 'CREDIT_ADJUSTMENT', name='transactiontype'), autoincrement=False, nullable=False),
    sa.Column('credit_amount', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('balance_before', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('balance_after', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('reference_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('is_reversed', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('reversed_by_transaction_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['booking_id'], ['bookings.id'], name='fk_transactions_booking_id_bookings'),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], name='fk_transactions_created_by_users'),
    sa.ForeignKeyConstraint(['payment_id'], ['payments.id'], name='fk_transactions_payment_id_payments'),
    sa.ForeignKeyConstraint(['reversed_by_transaction_id'], ['transactions.id'], name='fk_transactions_reversed_by_transaction_id_transactions'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk_transactions_user_id_users'),
    sa.ForeignKeyConstraint(['user_package_id'], ['user_packages.id'], name='fk_transactions_user_package_id_user_packages'),
    sa.PrimaryKeyConstraint('id', name='pk_transactions')
    )
    op.create_index('ix_transactions_id', 'transactions', ['id'], unique=False)
    # ### end Alembic commands ###