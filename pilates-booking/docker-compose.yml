
services:
  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-pilates_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-pilates_password}
      POSTGRES_DB: ${POSTGRES_DB:-pilates_db}
      # Security hardening
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256 --auth-local=scram-sha-256"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    # Security: run as non-root user
    user: postgres
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-pilates_user} -d ${POSTGRES_DB:-pilates_db}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    # Security: enable password protection
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-}
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      # Override database URL to use docker container names
      - DATABASE_URL=postgresql://${POSTGRES_USER:-pilates_user}:${POSTGRES_PASSWORD:-pilates_password}@postgres:5432/${POSTGRES_DB:-pilates_db}
      - REDIS_URL=redis://:${REDIS_PASSWORD:-}@redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
    # Security: run as non-root user  
    user: "1000:1000"
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
    # Security: read-only root filesystem (except for specific writable areas)
    read_only: true
    tmpfs:
      - /tmp
      - /var/tmp
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

volumes:
  postgres_data:
  redis_data: